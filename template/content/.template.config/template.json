{
  "$schema": "http://json.schemastore.org/template",
  "author": "Ivan Paulovich",
  "classifications": [
    "Common",
    "Library",
    "Web API"
  ],
  "name": "Manga: Clean Architecture for .NET Applications!",
  "identity": "Paulovich.Manga",
  "groupIdentity": "Paulovich.Manga",
  "shortName": "manga",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "Manga",
  "preferNameDirectory": true,
  "symbols": {    
    "use-cases": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "full",
      "choices": [
        {
          "choice": "full",
          "description": "Full Solution with Two Aggregates and reading and writing operations"
        },
        {
          "choice": "basic",
          "description": "Basic Read and Write Use Cases"
        },
        {
          "choice": "readonly",
          "description": "Read only Use Cases"
        },
        {
          "choice": "none",
          "description": "Without Use Cases"
        }
      ],
      "replaces": "use-cases",
      "onlyIf": [
        {
          "after": "\"use-cases\": \""
        }
      ]
    },
    "user-interface": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "webapi",
      "choices": [
        {
          "choice": "none",
          "description": "None"
        },
        {
          "choice": "webapi",
          "description": "Web API"
        }
      ],
      "replaces": "user-interface",
      "onlyIf": [
        {
          "after": "\"user-interface\": \""
        }
      ]
    },
    "data-access": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "inmemory",
      "choices": [
		{
          "choice": "inmemory",
          "description": "InMemory"
        },
        {
          "choice": "mongo",
          "description": "MongoDB"
        },
        {
          "choice": "entityframework",
          "description": "Entity Framework Core"
        },
        {
          "choice": "dapper",
          "description": "Dapper"
        },
        {
          "choice": "none",
          "description": "No frameworks"
        }
      ],
      "replaces": "data-access",
      "onlyIf": [
        {
          "after": "\"data-access\": \""
        }
      ]
    },
    "tips": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Includes architecture tips or not.",
      "defaultValue": "true",
      "replaces": "tips",
      "onlyIf": [
        {
          "after": "\"tips\": \""
        }
      ]
    },
    "skip-restore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Run dotnet restore after code generation.",
      "defaultValue": "false",
      "replaces": "skip-restore",
      "onlyIf": [
        {
          "after": "\"skip-restore\": \""
        }
      ]
    },
    "Empty": {
      "type": "computed",
      "value": "(use-cases == \"none\")"
    },
    "Basic": {
      "type": "computed",
      "value": "(use-cases == \"basic\")"
    },
    "ReadOnly": {
      "type": "computed",
      "value": "(use-cases == \"readonly\")"
    },
    "Full": {
      "type": "computed",
      "value": "(use-cases == \"full\")"
    },
    "UI-None": {
      "type": "computed",
      "value": "(ui == \"none\")"
    },
    "UI-Webapi": {
      "type": "computed",
      "value": "(ui == \"webapi\")"
    },
    "Mongo": {
      "type": "computed",
      "value": "(data-access == \"mongo\")"
    },
    "EntityFramework": {
      "type": "computed",
      "value": "(data-access == \"entityframework\")"
    },
    "Dapper": {
      "type": "computed",
      "value": "(data-access == \"dapper\")"
    },
    "InMemory": {
      "type": "computed",
      "value": "(data-access == \"inmemory\")"
    },
    "CloseAccount": {
      "type": "computed",
      "value": "(Full)"
    },
    "Deposit": {
      "type": "computed",
      "value": "(Full)"
    },
    "GetAccountDetails": {
      "type": "computed",
      "value": "(Full || ReadOnly)"
    },
    "GetCustomerDetails": {
      "type": "computed",
      "value": "(Full || ReadOnly || Basic)"
    },
    "Register": {
      "type": "computed",
      "value": "(Full || Basic)"
    },
    "Withdraw": {
      "type": "computed",
      "value": "(Full)"
    }
  },
  "sources": [
    {
      "source": "./",
      "modifiers": [
        {
          "condition": "(Empty)",
          "exclude": [
            "Manga.WebApi/UseCases/Register/**/*.cs",
            "Manga.WebApi/UseCases/Deposit/**/*.cs",
            "Manga.WebApi/UseCases/Withdraw/**/*.cs",
            "Manga.WebApi/UseCases/GetAccountDetails/**/*.cs",
            "Manga.WebApi/UseCases/GetCustomerDetails/**/*.cs",
            "Manga.WebApi/UseCases/CloseAccount/**/*.cs",
            "Manga.Application/UseCases/Register/**/*.cs",
            "Manga.Application/UseCases/Deposit/**/*.cs",
            "Manga.Application/UseCases/Withdraw/**/*.cs",
            "Manga.Application/UseCases/GetAccountDetails/**/*.cs",
            "Manga.Application/UseCases/GetCustomerDetails/**/*.cs",
            "Manga.Application/UseCases/CloseAccount/**/*.cs",
            "Manga.Application/Repositories/**/*.cs",
            "Manga.Domain/Accounts/**/*.cs",
            "Manga.Domain/Customers/**/*.cs",
            "Manga.Domain/ValueObjects/**/*.cs",
            "Manga.Infrastructure/DapperDataAccess/**/*.cs",
            "Manga.Infrastructure/EntityFrameworkDataAccess/**/*.cs",
            "Manga.Infrastructure/InMemoryDataAccess/**/*.cs",
            "Manga.Infrastructure/MongoDataAccess/**/*.cs",
            "Manga.Infrastructure/Modules/**/*.cs"
			]
        },
        {
          "condition": "(ReadOnly)",
          "exclude": [
            "Manga.WebApi/UseCases/Register/**/*.cs",
            "Manga.WebApi/UseCases/Deposit/**/*.cs",
            "Manga.WebApi/UseCases/Withdraw/**/*.cs",
            "Manga.WebApi/UseCases/CloseAccount/**/*.cs",
            "Manga.Application/UseCases/Register/**/*.cs",
            "Manga.Application/UseCases/Deposit/**/*.cs",
            "Manga.Application/UseCases/Withdraw/**/*.cs",
            "Manga.Application/UseCases/CloseAccount/**/*.cs"
          ]
        },
        {
          "condition": "(Basic)",
          "exclude": [
            "Manga.WebApi/UseCases/Deposit/**/*.cs",
            "Manga.WebApi/UseCases/Withdraw/**/*.cs",
            "Manga.WebApi/UseCases/GetAccountDetails/**/*.cs",
            "Manga.WebApi/UseCases/CloseAccount/**/*.cs",
            "Manga.Application/UseCases/Deposit/**/*.cs",
            "Manga.Application/UseCases/Withdraw/**/*.cs",
            "Manga.Application/UseCases/GetAccountDetails/**/*.cs",
            "Manga.Application/UseCases/CloseAccount/**/*.cs"
          ]
        },
        {
          "condition": "(Full)",
          "exclude": []
        },
        {
          "condition": "(!docs)",
          "exclude": [
            "**/*.md"
          ]
        },
        {
          "condition": "(!Mongo)",
          "exclude": [
            "Manga.Infrastructure/MongoDataAccess/**/*.cs",
			"Manga.Infrastructure/MongoDataAccess/**/*.sh",
			"Manga.WebApi/autofac.mongodb.json"
          ]
        },
        {
          "condition": "(!Dapper)",
          "exclude": [
            "Manga.Infrastructure/DapperDataAccess/**/*.cs",
			"Manga.Infrastructure/DapperDataAccess/**/*.sql",
			"Manga.WebApi/autofac.dapper.json"
          ]
        },
        {
          "condition": "(!EntityFramework)",
          "exclude": [
            "Manga.Infrastructure/EntityFrameworkDataAccess/**/*.cs",
			"Manga.Infrastructure/EntityFrameworkDataAccess/**/*.sql",
			"Manga.WebApi/autofac.entityframework.json"
          ]
        },
        {
          "condition": "(!InMemory)",
          "exclude": [
            "Manga.Infrastructure/InMemoryDataAccess/**/*.cs",
			"Manga.Infrastructure/InMemoryDataAccess/**/*.sql",
			"Manga.WebApi/autofac.json"
          ]
        },
        {
          "condition": "(UI-None)",
          "exclude": [
            "Manga.WebApi/**/*"
          ]
        },
        {
          "condition": "(!UI-Webapi)",
          "exclude": [
			"Dockerfile"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "path": "Manga.Application/Manga.Application.csproj"
    },
    {
      "path": "Manga.Domain/Manga.Domain.csproj"
    },
    {
      "path": "Manga.Infrastructure/Manga.Infrastructure.csproj"
    },
    {
      "path": "Manga.WebApi/Manga.WebApi.csproj",
      "condition": "(user-interface == \"webapi\")"
    }
  ],
  "postActions": [
    {
      "actionId": "D396686C-DE0E-4DE6-906D-291CD29FC5DE",
      "condition": "(UI-None)",
      "args": {
        "primaryOutputIndexes": "0;1;2"
      },
      "continueOnError": true,
      "manualInstructions": [
        {
          "text": "Add projects to solution."
        }
      ]
    },
    {
      "condition": "(user-interface == \"webapi\")",
      "actionId": "D396686C-DE0E-4DE6-906D-291CD29FC5DE",
      "args": {
        "primaryOutputIndexes": "0;1;2;3"
      },
      "continueOnError": true,
      "manualInstructions": [
        {
          "text": "Add projects to solution."
        }
      ]
    },
    {
      "condition": "(!skip-restore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}